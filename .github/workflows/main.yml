#
# Copyright (C) 2024 Antonino Scordino
# Copyright (C) 2024 Souhrud Reddy
#
# SPDX-License-Identifier: Apache-2.0
#

name: Start job for building through Crave.
on:
  workflow_dispatch:
    # Various inputs to simplify usage of workflow.
    inputs:
      BUILD_DIFFERENT_ROM:
        description: "Command to initialize a different 'repo' project:"
        required: false
        default: "repo init -u https://github.com/Evolution-X/manifest -b udc"
      REMOVALS:
        description: "Folders to be removed before syncing:"
        required: false
      LOCAL_MANIFEST:
        description: "Personal local manifest [repository or raw]:"
        required: true
        default: 'git@github.com:Sa-Sajjad/manifest.git'
      LOCAL_MANIFEST_BRANCH:
        description: "Personal local manifest's branch:"
        required: false
        default: 'evo-14'
      DEVICE_NAME:
        description: "Device's codename:"
        required: true
        default: "lavender"
      PRODUCT_NAME:
        description: "Product to build:"
        required: true
        default: "evolution_lavender"
      BUILD_COMMAND:
        description: 'Command to be used for compiling:'
        required: true
        default: 'mka evolution'
      BUILD_TYPE:
        description: 'Type of build:'
        required: true
        default: 'eng'
        type: choice
        options: 
        - 'eng'
        - 'userdebug'
        - 'user' 
      TEST_MANIFEST:
        description: 'Wanna test local manifest?'
        required: true
        default: 'no'
        type: choice
        options: 
        - 'yes'
        - 'no'

jobs:
  test:
    name: Build using foss.crave.io
      # Change this to self-hosted after setting up devspace as github actions runner
    runs-on: ubuntu-latest
    env:
      ght: ${{ secrets.GHT }}
      setup_ssh: ${{ secrets.SSH }}
      sf_uploader: ${{ secrets.UPLOADER }}
      notify: ${{ secrets.NOTIFY }}
      
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:

      # Clean the workflow before initialization.
    - name: Cleanup
      run: rm -rf ${PWD}/*

      # Check-out in order to access the repository's files.
    - name: Check-out to repository
      uses: actions/checkout@v4

    - name: Configure the 'repo, ssh, git config' environment
      run: |
        mkdir ${{ github.event.inputs.DEVICE_NAME }}
        cd ${{ github.event.inputs.DEVICE_NAME }}
        mkdir "${HOME}/bin"
        curl https://storage.googleapis.com/git-repo-downloads/repo >> "${HOME}/bin/repo"
        chmod a+x "${HOME}/bin/repo"
        sudo ln -sf "/home/${USER}/bin/repo" "/usr/bin/repo"
        git config --global user.name "Sa-Sajjad"
        git config --global user.email "sqsa93103@gmail.com"
        bash <(curl -s ${{ secrets.SSH }})
            
    # Test Your Personal 'Local Manifests' against The ROM
    - name: Test Local Manifests
      run: |
        if [ "${{ github.event.inputs.TEST_MANIFEST }}" == "yes" ]; then
          ${{ github.event.inputs.BUILD_DIFFERENT_ROM }}
          git clone ${{ github.event.inputs.LOCAL_MANIFEST }} --depth 1 -b ${{ github.event.inputs.LOCAL_MANIFEST_BRANCH }} .repo/local_manifests && \
          timeout 60s repo sync --force-sync || { exit_code=$?; [ $exit_code -eq 124 ] || (echo "Error: Process failed with exit code $exit_code"; exit $exit_code); }
          rm -rf .repo
        fi
      timeout-minutes: 5
  
      # Download and configure 'crave'.
    - name: Configure the 'crave' & project id environment
      run: |
        if [ "${DCDEVSPACE}" == "1" ]; then
        echo 'No need to set up crave, we are already running in devspace!'
        else
          curl -s https://gist.githubusercontent.com/Sa-Sajjad/f7548b92f0713936fed7aeb92b26f202/raw/crave.sh | bash -s --
          mv ${PWD}/crave ${HOME}/bin/
          sudo ln -sf /home/${USER}/bin/crave /usr/bin/crave
          envsubst < ${PWD}/crave.conf.sample >> ${PWD}/crave.conf
          rm -rf ${PWD}/crave.conf.sample          
        fi
        echo 'Setup Crave project -id!'
        repo init -u https://github.com/LineageOS/android.git -b lineage-21.0 --git-lfs --depth=1
        crave set --projectID 72
      id: pwd
      
      env:
        CRAVE_USERNAME: ${{  secrets.CRAVE_USERNAME  }}
        CRAVE_TOKEN: ${{  secrets.CRAVE_TOKEN  }}

      # Create a 'crave' job for building.
    - name: Start compilation through 'crave'
      run: |
        crave run --no-patch --${CLEAN} "rm -rf .repo/local_manifests/ ${{ github.event.inputs.REMOVALS }} && \
        # Clone local_manifests repository
        bash <(curl -s ${{ secrets.SSH }}) && \
        bash <(curl -s ${{ secrets.NOTIFY }}) && \
        ${{ github.event.inputs.BUILD_DIFFERENT_ROM }} ; \
        git clone ${{ github.event.inputs.LOCAL_MANIFEST }} --depth 1 -b ${{ github.event.inputs.LOCAL_MANIFEST_BRANCH }} .repo/local_manifests && \

        if [ ! $? == 0 ]; then \
          curl -o .repo/local_manifests ${{ github.event.inputs.LOCAL_MANIFEST }}; \
        fi \
        
        # Sync the repositories
        repo sync -c -j\$(nproc --all) --no-clone-bundle --no-tags --optimized-fetch --prune --force-sync  && \
        
        # Set up build environment
        export BUILD_USERNAME=Sã Śâjjãd ; \
        export BUILD_HOSTNAME=crave ; \
        source build/envsetup.sh && \

        # Build the ROM
        lunch ${{ github.event.inputs.PRODUCT_NAME }}-${{ github.event.inputs.BUILD_TYPE }} && \
        make installclean && \
        ${{ github.event.inputs.BUILD_COMMAND }} && \
        bash <(curl -s ${{ secrets.UPLOADER }})"

      # Only reach this wheter the user killed the workflow.
    - name: Execute if the job is cancelled
      if: ${{ cancelled() }}
      run: crave stop --all

      # Pull '.zip's and '.img's from 'crave'.
    - name: Retrive build artifact(s)
      run: |
        crave pull out/target/product/*/*.zip
        crave pull out/target/product/*/*.img

      # Directly upload to releases.
    - name: Upload to repository's releases page
      uses: softprops/action-gh-release@v1
      with:
        files: |
          # ${{ github.event.inputs.DEVICE_NAME }}/recovery.img
          ${{ github.event.inputs.DEVICE_NAME }}/boot.img
          # ${{ github.event.inputs.DEVICE_NAME }}/vendor_boot.img
          # ${{ github.event.inputs.DEVICE_NAME }}/vendor.img
          # ${{ github.event.inputs.DEVICE_NAME }}/system.img
          ${{ github.event.inputs.DEVICE_NAME }}/*.zip
        name: ${{ github.event.inputs.PRODUCT_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Target: ${{ github.event.inputs.PRODUCT_NAME }}-${{ github.event.inputs.BUILD_TYPE }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
